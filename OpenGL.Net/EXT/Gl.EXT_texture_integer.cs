
// MIT License
// 
// Copyright (c) 2009-2017 Luca Piccioni
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 
// This file is automatically generated

#pragma warning disable 649, 1572, 1573

// ReSharper disable RedundantUsingDirective
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;

using Khronos;

// ReSharper disable CheckNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable JoinDeclarationAndInitializer

namespace OpenGL
{
	public partial class Gl
	{
		/// <summary>
		/// [GL] Value of GL_ALPHA32UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int ALPHA32UI_EXT = 0x8D72;

		/// <summary>
		/// [GL] Value of GL_INTENSITY32UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int INTENSITY32UI_EXT = 0x8D73;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE32UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE32UI_EXT = 0x8D74;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE_ALPHA32UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE_ALPHA32UI_EXT = 0x8D75;

		/// <summary>
		/// [GL] Value of GL_ALPHA16UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int ALPHA16UI_EXT = 0x8D78;

		/// <summary>
		/// [GL] Value of GL_INTENSITY16UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int INTENSITY16UI_EXT = 0x8D79;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE16UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE16UI_EXT = 0x8D7A;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE_ALPHA16UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE_ALPHA16UI_EXT = 0x8D7B;

		/// <summary>
		/// [GL] Value of GL_ALPHA8UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int ALPHA8UI_EXT = 0x8D7E;

		/// <summary>
		/// [GL] Value of GL_INTENSITY8UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int INTENSITY8UI_EXT = 0x8D7F;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE8UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE8UI_EXT = 0x8D80;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE_ALPHA8UI_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE_ALPHA8UI_EXT = 0x8D81;

		/// <summary>
		/// [GL] Value of GL_ALPHA32I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int ALPHA32I_EXT = 0x8D84;

		/// <summary>
		/// [GL] Value of GL_INTENSITY32I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int INTENSITY32I_EXT = 0x8D85;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE32I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE32I_EXT = 0x8D86;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE_ALPHA32I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE_ALPHA32I_EXT = 0x8D87;

		/// <summary>
		/// [GL] Value of GL_ALPHA16I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int ALPHA16I_EXT = 0x8D8A;

		/// <summary>
		/// [GL] Value of GL_INTENSITY16I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int INTENSITY16I_EXT = 0x8D8B;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE16I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE16I_EXT = 0x8D8C;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE_ALPHA16I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE_ALPHA16I_EXT = 0x8D8D;

		/// <summary>
		/// [GL] Value of GL_ALPHA8I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int ALPHA8I_EXT = 0x8D90;

		/// <summary>
		/// [GL] Value of GL_INTENSITY8I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int INTENSITY8I_EXT = 0x8D91;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE8I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE8I_EXT = 0x8D92;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE_ALPHA8I_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE_ALPHA8I_EXT = 0x8D93;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE_INTEGER_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE_INTEGER_EXT = 0x8D9C;

		/// <summary>
		/// [GL] Value of GL_LUMINANCE_ALPHA_INTEGER_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D;

		/// <summary>
		/// [GL] Value of GL_RGBA_INTEGER_MODE_EXT symbol.
		/// </summary>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public const int RGBA_INTEGER_MODE_EXT = 0x8D9E;

		/// <summary>
		/// [GL] glClearColorIiEXT: Binding for glClearColorIiEXT.
		/// </summary>
		/// <param name="red">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="green">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="blue">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="alpha">
		/// A <see cref="T:int"/>.
		/// </param>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public static void ClearColorIEXT(int red, int green, int blue, int alpha)
		{
			Debug.Assert(Delegates.pglClearColorIiEXT != null, "pglClearColorIiEXT not implemented");
			Delegates.pglClearColorIiEXT(red, green, blue, alpha);
			LogCommand("glClearColorIiEXT", null, red, green, blue, alpha			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glClearColorIuiEXT: Binding for glClearColorIuiEXT.
		/// </summary>
		/// <param name="red">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="green">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="blue">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="alpha">
		/// A <see cref="T:uint"/>.
		/// </param>
		[RequiredByFeature("GL_EXT_texture_integer")]
		public static void ClearColorIEXT(uint red, uint green, uint blue, uint alpha)
		{
			Debug.Assert(Delegates.pglClearColorIuiEXT != null, "pglClearColorIuiEXT not implemented");
			Delegates.pglClearColorIuiEXT(red, green, blue, alpha);
			LogCommand("glClearColorIuiEXT", null, red, green, blue, alpha			);
			DebugCheckErrors(null);
		}

		internal static unsafe partial class Delegates
		{
			[RequiredByFeature("GL_EXT_texture_integer")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glClearColorIiEXT(int red, int green, int blue, int alpha);

			[RequiredByFeature("GL_EXT_texture_integer")]
			[ThreadStatic]
			internal static glClearColorIiEXT pglClearColorIiEXT;

			[RequiredByFeature("GL_EXT_texture_integer")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glClearColorIuiEXT(uint red, uint green, uint blue, uint alpha);

			[RequiredByFeature("GL_EXT_texture_integer")]
			[ThreadStatic]
			internal static glClearColorIuiEXT pglClearColorIuiEXT;

		}
	}

}
