
// MIT License
// 
// Copyright (c) 2009-2017 Luca Piccioni
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 
// This file is automatically generated

#pragma warning disable 649, 1572, 1573

// ReSharper disable RedundantUsingDirective
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;

using Khronos;

// ReSharper disable CheckNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable JoinDeclarationAndInitializer

namespace OpenGL
{
	public partial class Gl
	{
		/// <summary>
		/// [GL] Value of GL_OCCLUSION_QUERY_EVENT_MASK_AMD symbol.
		/// </summary>
		[RequiredByFeature("GL_AMD_occlusion_query_event")]
		public const int OCCLUSION_QUERY_EVENT_MASK_AMD = 0x874F;

		/// <summary>
		/// [GL] Value of GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD symbol.
		/// </summary>
		[RequiredByFeature("GL_AMD_occlusion_query_event")]
		[Log(BitmaskName = "GL")]
		public const uint QUERY_DEPTH_PASS_EVENT_BIT_AMD = 0x00000001;

		/// <summary>
		/// [GL] Value of GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD symbol.
		/// </summary>
		[RequiredByFeature("GL_AMD_occlusion_query_event")]
		[Log(BitmaskName = "GL")]
		public const uint QUERY_DEPTH_FAIL_EVENT_BIT_AMD = 0x00000002;

		/// <summary>
		/// [GL] Value of GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD symbol.
		/// </summary>
		[RequiredByFeature("GL_AMD_occlusion_query_event")]
		[Log(BitmaskName = "GL")]
		public const uint QUERY_STENCIL_FAIL_EVENT_BIT_AMD = 0x00000004;

		/// <summary>
		/// [GL] Value of GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD symbol.
		/// </summary>
		[RequiredByFeature("GL_AMD_occlusion_query_event")]
		[Log(BitmaskName = "GL")]
		public const uint QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = 0x00000008;

		/// <summary>
		/// [GL] Value of GL_QUERY_ALL_EVENT_BITS_AMD symbol.
		/// </summary>
		[RequiredByFeature("GL_AMD_occlusion_query_event")]
		[Log(BitmaskName = "GL")]
		public const uint QUERY_ALL_EVENT_BITS_AMD = 0xFFFFFFFF;

		/// <summary>
		/// [GL] glQueryObjectParameteruiAMD: Binding for glQueryObjectParameteruiAMD.
		/// </summary>
		/// <param name="target">
		/// A <see cref="T:QueryTarget"/>.
		/// </param>
		/// <param name="id">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="pname">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="param">
		/// A <see cref="T:OcclusionQueryEventMaskAMD"/>.
		/// </param>
		[RequiredByFeature("GL_AMD_occlusion_query_event")]
		public static void QueryObjectParameterAMD(QueryTarget target, uint id, int pname, OcclusionQueryEventMaskAMD param)
		{
			Debug.Assert(Delegates.pglQueryObjectParameteruiAMD != null, "pglQueryObjectParameteruiAMD not implemented");
			Delegates.pglQueryObjectParameteruiAMD((int)target, id, pname, (uint)param);
			LogCommand("glQueryObjectParameteruiAMD", null, target, id, pname, param			);
			DebugCheckErrors(null);
		}

		internal static unsafe partial class Delegates
		{
			[RequiredByFeature("GL_AMD_occlusion_query_event")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glQueryObjectParameteruiAMD(int target, uint id, int pname, uint param);

			[RequiredByFeature("GL_AMD_occlusion_query_event")]
			[ThreadStatic]
			internal static glQueryObjectParameteruiAMD pglQueryObjectParameteruiAMD;

		}
	}

}
