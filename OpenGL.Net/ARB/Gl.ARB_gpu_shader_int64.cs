
// MIT License
// 
// Copyright (c) 2009-2017 Luca Piccioni
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 
// This file is automatically generated

#pragma warning disable 649, 1572, 1573

// ReSharper disable RedundantUsingDirective
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;

using Khronos;

// ReSharper disable CheckNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable JoinDeclarationAndInitializer

namespace OpenGL
{
	public partial class Gl
	{
		/// <summary>
		/// [GL] Value of GL_INT64_ARB symbol.
		/// </summary>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		[RequiredByFeature("GL_AMD_gpu_shader_int64")]
		[RequiredByFeature("GL_NV_gpu_shader5", Api = "gl|glcore|gles2")]
		[RequiredByFeature("GL_NV_vertex_attrib_integer_64bit", Api = "gl|glcore")]
		public const int INT64_ARB = 0x140E;

		/// <summary>
		/// [GL] Value of GL_INT64_VEC2_ARB symbol.
		/// </summary>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		[RequiredByFeature("GL_AMD_gpu_shader_int64")]
		[RequiredByFeature("GL_NV_gpu_shader5", Api = "gl|glcore|gles2")]
		public const int INT64_VEC2_ARB = 0x8FE9;

		/// <summary>
		/// [GL] Value of GL_INT64_VEC3_ARB symbol.
		/// </summary>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		[RequiredByFeature("GL_AMD_gpu_shader_int64")]
		[RequiredByFeature("GL_NV_gpu_shader5", Api = "gl|glcore|gles2")]
		public const int INT64_VEC3_ARB = 0x8FEA;

		/// <summary>
		/// [GL] Value of GL_INT64_VEC4_ARB symbol.
		/// </summary>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		[RequiredByFeature("GL_AMD_gpu_shader_int64")]
		[RequiredByFeature("GL_NV_gpu_shader5", Api = "gl|glcore|gles2")]
		public const int INT64_VEC4_ARB = 0x8FEB;

		/// <summary>
		/// [GL] Value of GL_UNSIGNED_INT64_VEC2_ARB symbol.
		/// </summary>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		[RequiredByFeature("GL_AMD_gpu_shader_int64")]
		[RequiredByFeature("GL_NV_gpu_shader5", Api = "gl|glcore|gles2")]
		public const int UNSIGNED_INT64_VEC2_ARB = 0x8FF5;

		/// <summary>
		/// [GL] Value of GL_UNSIGNED_INT64_VEC3_ARB symbol.
		/// </summary>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		[RequiredByFeature("GL_AMD_gpu_shader_int64")]
		[RequiredByFeature("GL_NV_gpu_shader5", Api = "gl|glcore|gles2")]
		public const int UNSIGNED_INT64_VEC3_ARB = 0x8FF6;

		/// <summary>
		/// [GL] Value of GL_UNSIGNED_INT64_VEC4_ARB symbol.
		/// </summary>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		[RequiredByFeature("GL_AMD_gpu_shader_int64")]
		[RequiredByFeature("GL_NV_gpu_shader5", Api = "gl|glcore|gles2")]
		public const int UNSIGNED_INT64_VEC4_ARB = 0x8FF7;

		/// <summary>
		/// [GL] glUniform1i64ARB: Binding for glUniform1i64ARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:long"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform1ARB(int location, long x)
		{
			Debug.Assert(Delegates.pglUniform1i64ARB != null, "pglUniform1i64ARB not implemented");
			Delegates.pglUniform1i64ARB(location, x);
			LogCommand("glUniform1i64ARB", null, location, x			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform2i64ARB: Binding for glUniform2i64ARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:long"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform2ARB(int location, long x, long y)
		{
			Debug.Assert(Delegates.pglUniform2i64ARB != null, "pglUniform2i64ARB not implemented");
			Delegates.pglUniform2i64ARB(location, x, y);
			LogCommand("glUniform2i64ARB", null, location, x, y			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform3i64ARB: Binding for glUniform3i64ARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="z">
		/// A <see cref="T:long"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform3ARB(int location, long x, long y, long z)
		{
			Debug.Assert(Delegates.pglUniform3i64ARB != null, "pglUniform3i64ARB not implemented");
			Delegates.pglUniform3i64ARB(location, x, y, z);
			LogCommand("glUniform3i64ARB", null, location, x, y, z			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform4i64ARB: Binding for glUniform4i64ARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="z">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="w">
		/// A <see cref="T:long"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform4ARB(int location, long x, long y, long z, long w)
		{
			Debug.Assert(Delegates.pglUniform4i64ARB != null, "pglUniform4i64ARB not implemented");
			Delegates.pglUniform4i64ARB(location, x, y, z, w);
			LogCommand("glUniform4i64ARB", null, location, x, y, z, w			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform1i64vARB: Binding for glUniform1i64vARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:long[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform1ARB(int location, long[] value)
		{
			unsafe {
				fixed (long* p_value = value)
				{
					Debug.Assert(Delegates.pglUniform1i64vARB != null, "pglUniform1i64vARB not implemented");
					Delegates.pglUniform1i64vARB(location, value.Length, p_value);
					LogCommand("glUniform1i64vARB", null, location, value.Length, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform2i64vARB: Binding for glUniform2i64vARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:long[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform2ARB(int location, long[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 2) == 0, "empty or not multiple of 2");
			unsafe {
				fixed (long* p_value = value)
				{
					Debug.Assert(Delegates.pglUniform2i64vARB != null, "pglUniform2i64vARB not implemented");
					Delegates.pglUniform2i64vARB(location, value.Length / 2, p_value);
					LogCommand("glUniform2i64vARB", null, location, value.Length / 2, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform3i64vARB: Binding for glUniform3i64vARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:long[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform3ARB(int location, long[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 3) == 0, "empty or not multiple of 3");
			unsafe {
				fixed (long* p_value = value)
				{
					Debug.Assert(Delegates.pglUniform3i64vARB != null, "pglUniform3i64vARB not implemented");
					Delegates.pglUniform3i64vARB(location, value.Length / 3, p_value);
					LogCommand("glUniform3i64vARB", null, location, value.Length / 3, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform4i64vARB: Binding for glUniform4i64vARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:long[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform4ARB(int location, long[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 4) == 0, "empty or not multiple of 4");
			unsafe {
				fixed (long* p_value = value)
				{
					Debug.Assert(Delegates.pglUniform4i64vARB != null, "pglUniform4i64vARB not implemented");
					Delegates.pglUniform4i64vARB(location, value.Length / 4, p_value);
					LogCommand("glUniform4i64vARB", null, location, value.Length / 4, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform1ui64ARB: Binding for glUniform1ui64ARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:ulong"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform1ARB(int location, ulong x)
		{
			Debug.Assert(Delegates.pglUniform1ui64ARB != null, "pglUniform1ui64ARB not implemented");
			Delegates.pglUniform1ui64ARB(location, x);
			LogCommand("glUniform1ui64ARB", null, location, x			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform2ui64ARB: Binding for glUniform2ui64ARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:ulong"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform2ARB(int location, ulong x, ulong y)
		{
			Debug.Assert(Delegates.pglUniform2ui64ARB != null, "pglUniform2ui64ARB not implemented");
			Delegates.pglUniform2ui64ARB(location, x, y);
			LogCommand("glUniform2ui64ARB", null, location, x, y			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform3ui64ARB: Binding for glUniform3ui64ARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="z">
		/// A <see cref="T:ulong"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform3ARB(int location, ulong x, ulong y, ulong z)
		{
			Debug.Assert(Delegates.pglUniform3ui64ARB != null, "pglUniform3ui64ARB not implemented");
			Delegates.pglUniform3ui64ARB(location, x, y, z);
			LogCommand("glUniform3ui64ARB", null, location, x, y, z			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform4ui64ARB: Binding for glUniform4ui64ARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="z">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="w">
		/// A <see cref="T:ulong"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform4ARB(int location, ulong x, ulong y, ulong z, ulong w)
		{
			Debug.Assert(Delegates.pglUniform4ui64ARB != null, "pglUniform4ui64ARB not implemented");
			Delegates.pglUniform4ui64ARB(location, x, y, z, w);
			LogCommand("glUniform4ui64ARB", null, location, x, y, z, w			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform1ui64vARB: Binding for glUniform1ui64vARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:ulong[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform1ARB(int location, ulong[] value)
		{
			unsafe {
				fixed (ulong* p_value = value)
				{
					Debug.Assert(Delegates.pglUniform1ui64vARB != null, "pglUniform1ui64vARB not implemented");
					Delegates.pglUniform1ui64vARB(location, value.Length, p_value);
					LogCommand("glUniform1ui64vARB", null, location, value.Length, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform2ui64vARB: Binding for glUniform2ui64vARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:ulong[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform2ARB(int location, ulong[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 2) == 0, "empty or not multiple of 2");
			unsafe {
				fixed (ulong* p_value = value)
				{
					Debug.Assert(Delegates.pglUniform2ui64vARB != null, "pglUniform2ui64vARB not implemented");
					Delegates.pglUniform2ui64vARB(location, value.Length / 2, p_value);
					LogCommand("glUniform2ui64vARB", null, location, value.Length / 2, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform3ui64vARB: Binding for glUniform3ui64vARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:ulong[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform3ARB(int location, ulong[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 3) == 0, "empty or not multiple of 3");
			unsafe {
				fixed (ulong* p_value = value)
				{
					Debug.Assert(Delegates.pglUniform3ui64vARB != null, "pglUniform3ui64vARB not implemented");
					Delegates.pglUniform3ui64vARB(location, value.Length / 3, p_value);
					LogCommand("glUniform3ui64vARB", null, location, value.Length / 3, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glUniform4ui64vARB: Binding for glUniform4ui64vARB.
		/// </summary>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:ulong[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void Uniform4ARB(int location, ulong[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 4) == 0, "empty or not multiple of 4");
			unsafe {
				fixed (ulong* p_value = value)
				{
					Debug.Assert(Delegates.pglUniform4ui64vARB != null, "pglUniform4ui64vARB not implemented");
					Delegates.pglUniform4ui64vARB(location, value.Length / 4, p_value);
					LogCommand("glUniform4ui64vARB", null, location, value.Length / 4, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glGetUniformi64vARB: Binding for glGetUniformi64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="params">
		/// A <see cref="T:long[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void GetUniformARB(uint program, int location, [Out] long[] @params)
		{
			unsafe {
				fixed (long* p_params = @params)
				{
					Debug.Assert(Delegates.pglGetUniformi64vARB != null, "pglGetUniformi64vARB not implemented");
					Delegates.pglGetUniformi64vARB(program, location, p_params);
					LogCommand("glGetUniformi64vARB", null, program, location, @params					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glGetUniformui64vARB: Binding for glGetUniformui64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="params">
		/// A <see cref="T:ulong[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void GetUniformARB(uint program, int location, [Out] ulong[] @params)
		{
			unsafe {
				fixed (ulong* p_params = @params)
				{
					Debug.Assert(Delegates.pglGetUniformui64vARB != null, "pglGetUniformui64vARB not implemented");
					Delegates.pglGetUniformui64vARB(program, location, p_params);
					LogCommand("glGetUniformui64vARB", null, program, location, @params					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glGetnUniformi64vARB: Binding for glGetnUniformi64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="params">
		/// A <see cref="T:long[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void GetnUniformARB(uint program, int location, [Out] long[] @params)
		{
			unsafe {
				fixed (long* p_params = @params)
				{
					Debug.Assert(Delegates.pglGetnUniformi64vARB != null, "pglGetnUniformi64vARB not implemented");
					Delegates.pglGetnUniformi64vARB(program, location, @params.Length, p_params);
					LogCommand("glGetnUniformi64vARB", null, program, location, @params.Length, @params					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glGetnUniformui64vARB: Binding for glGetnUniformui64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="params">
		/// A <see cref="T:ulong[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void GetnUniformARB(uint program, int location, [Out] ulong[] @params)
		{
			unsafe {
				fixed (ulong* p_params = @params)
				{
					Debug.Assert(Delegates.pglGetnUniformui64vARB != null, "pglGetnUniformui64vARB not implemented");
					Delegates.pglGetnUniformui64vARB(program, location, @params.Length, p_params);
					LogCommand("glGetnUniformui64vARB", null, program, location, @params.Length, @params					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform1i64ARB: Binding for glProgramUniform1i64ARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:long"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform1ARB(uint program, int location, long x)
		{
			Debug.Assert(Delegates.pglProgramUniform1i64ARB != null, "pglProgramUniform1i64ARB not implemented");
			Delegates.pglProgramUniform1i64ARB(program, location, x);
			LogCommand("glProgramUniform1i64ARB", null, program, location, x			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform2i64ARB: Binding for glProgramUniform2i64ARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:long"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform2ARB(uint program, int location, long x, long y)
		{
			Debug.Assert(Delegates.pglProgramUniform2i64ARB != null, "pglProgramUniform2i64ARB not implemented");
			Delegates.pglProgramUniform2i64ARB(program, location, x, y);
			LogCommand("glProgramUniform2i64ARB", null, program, location, x, y			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform3i64ARB: Binding for glProgramUniform3i64ARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="z">
		/// A <see cref="T:long"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform3ARB(uint program, int location, long x, long y, long z)
		{
			Debug.Assert(Delegates.pglProgramUniform3i64ARB != null, "pglProgramUniform3i64ARB not implemented");
			Delegates.pglProgramUniform3i64ARB(program, location, x, y, z);
			LogCommand("glProgramUniform3i64ARB", null, program, location, x, y, z			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform4i64ARB: Binding for glProgramUniform4i64ARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="z">
		/// A <see cref="T:long"/>.
		/// </param>
		/// <param name="w">
		/// A <see cref="T:long"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform4ARB(uint program, int location, long x, long y, long z, long w)
		{
			Debug.Assert(Delegates.pglProgramUniform4i64ARB != null, "pglProgramUniform4i64ARB not implemented");
			Delegates.pglProgramUniform4i64ARB(program, location, x, y, z, w);
			LogCommand("glProgramUniform4i64ARB", null, program, location, x, y, z, w			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform1i64vARB: Binding for glProgramUniform1i64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:long[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform1ARB(uint program, int location, long[] value)
		{
			unsafe {
				fixed (long* p_value = value)
				{
					Debug.Assert(Delegates.pglProgramUniform1i64vARB != null, "pglProgramUniform1i64vARB not implemented");
					Delegates.pglProgramUniform1i64vARB(program, location, value.Length, p_value);
					LogCommand("glProgramUniform1i64vARB", null, program, location, value.Length, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform2i64vARB: Binding for glProgramUniform2i64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:long[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform2ARB(uint program, int location, long[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 2) == 0, "empty or not multiple of 2");
			unsafe {
				fixed (long* p_value = value)
				{
					Debug.Assert(Delegates.pglProgramUniform2i64vARB != null, "pglProgramUniform2i64vARB not implemented");
					Delegates.pglProgramUniform2i64vARB(program, location, value.Length / 2, p_value);
					LogCommand("glProgramUniform2i64vARB", null, program, location, value.Length / 2, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform3i64vARB: Binding for glProgramUniform3i64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:long[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform3ARB(uint program, int location, long[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 3) == 0, "empty or not multiple of 3");
			unsafe {
				fixed (long* p_value = value)
				{
					Debug.Assert(Delegates.pglProgramUniform3i64vARB != null, "pglProgramUniform3i64vARB not implemented");
					Delegates.pglProgramUniform3i64vARB(program, location, value.Length / 3, p_value);
					LogCommand("glProgramUniform3i64vARB", null, program, location, value.Length / 3, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform4i64vARB: Binding for glProgramUniform4i64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:long[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform4ARB(uint program, int location, long[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 4) == 0, "empty or not multiple of 4");
			unsafe {
				fixed (long* p_value = value)
				{
					Debug.Assert(Delegates.pglProgramUniform4i64vARB != null, "pglProgramUniform4i64vARB not implemented");
					Delegates.pglProgramUniform4i64vARB(program, location, value.Length / 4, p_value);
					LogCommand("glProgramUniform4i64vARB", null, program, location, value.Length / 4, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform1ui64ARB: Binding for glProgramUniform1ui64ARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:ulong"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform1ARB(uint program, int location, ulong x)
		{
			Debug.Assert(Delegates.pglProgramUniform1ui64ARB != null, "pglProgramUniform1ui64ARB not implemented");
			Delegates.pglProgramUniform1ui64ARB(program, location, x);
			LogCommand("glProgramUniform1ui64ARB", null, program, location, x			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform2ui64ARB: Binding for glProgramUniform2ui64ARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:ulong"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform2ARB(uint program, int location, ulong x, ulong y)
		{
			Debug.Assert(Delegates.pglProgramUniform2ui64ARB != null, "pglProgramUniform2ui64ARB not implemented");
			Delegates.pglProgramUniform2ui64ARB(program, location, x, y);
			LogCommand("glProgramUniform2ui64ARB", null, program, location, x, y			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform3ui64ARB: Binding for glProgramUniform3ui64ARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="z">
		/// A <see cref="T:ulong"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform3ARB(uint program, int location, ulong x, ulong y, ulong z)
		{
			Debug.Assert(Delegates.pglProgramUniform3ui64ARB != null, "pglProgramUniform3ui64ARB not implemented");
			Delegates.pglProgramUniform3ui64ARB(program, location, x, y, z);
			LogCommand("glProgramUniform3ui64ARB", null, program, location, x, y, z			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform4ui64ARB: Binding for glProgramUniform4ui64ARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="x">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="y">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="z">
		/// A <see cref="T:ulong"/>.
		/// </param>
		/// <param name="w">
		/// A <see cref="T:ulong"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform4ARB(uint program, int location, ulong x, ulong y, ulong z, ulong w)
		{
			Debug.Assert(Delegates.pglProgramUniform4ui64ARB != null, "pglProgramUniform4ui64ARB not implemented");
			Delegates.pglProgramUniform4ui64ARB(program, location, x, y, z, w);
			LogCommand("glProgramUniform4ui64ARB", null, program, location, x, y, z, w			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform1ui64vARB: Binding for glProgramUniform1ui64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:ulong[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform1ARB(uint program, int location, ulong[] value)
		{
			unsafe {
				fixed (ulong* p_value = value)
				{
					Debug.Assert(Delegates.pglProgramUniform1ui64vARB != null, "pglProgramUniform1ui64vARB not implemented");
					Delegates.pglProgramUniform1ui64vARB(program, location, value.Length, p_value);
					LogCommand("glProgramUniform1ui64vARB", null, program, location, value.Length, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform2ui64vARB: Binding for glProgramUniform2ui64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:ulong[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform2ARB(uint program, int location, ulong[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 2) == 0, "empty or not multiple of 2");
			unsafe {
				fixed (ulong* p_value = value)
				{
					Debug.Assert(Delegates.pglProgramUniform2ui64vARB != null, "pglProgramUniform2ui64vARB not implemented");
					Delegates.pglProgramUniform2ui64vARB(program, location, value.Length / 2, p_value);
					LogCommand("glProgramUniform2ui64vARB", null, program, location, value.Length / 2, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform3ui64vARB: Binding for glProgramUniform3ui64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:ulong[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform3ARB(uint program, int location, ulong[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 3) == 0, "empty or not multiple of 3");
			unsafe {
				fixed (ulong* p_value = value)
				{
					Debug.Assert(Delegates.pglProgramUniform3ui64vARB != null, "pglProgramUniform3ui64vARB not implemented");
					Delegates.pglProgramUniform3ui64vARB(program, location, value.Length / 3, p_value);
					LogCommand("glProgramUniform3ui64vARB", null, program, location, value.Length / 3, value					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glProgramUniform4ui64vARB: Binding for glProgramUniform4ui64vARB.
		/// </summary>
		/// <param name="program">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="location">
		/// A <see cref="T:int"/>.
		/// </param>
		/// <param name="value">
		/// A <see cref="T:ulong[]"/>.
		/// </param>
		[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
		public static void ProgramUniform4ARB(uint program, int location, ulong[] value)
		{
			Debug.Assert(value.Length > 0 && (value.Length % 4) == 0, "empty or not multiple of 4");
			unsafe {
				fixed (ulong* p_value = value)
				{
					Debug.Assert(Delegates.pglProgramUniform4ui64vARB != null, "pglProgramUniform4ui64vARB not implemented");
					Delegates.pglProgramUniform4ui64vARB(program, location, value.Length / 4, p_value);
					LogCommand("glProgramUniform4ui64vARB", null, program, location, value.Length / 4, value					);
				}
			}
			DebugCheckErrors(null);
		}

		internal static unsafe partial class Delegates
		{
			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform1i64ARB(int location, long x);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform1i64ARB pglUniform1i64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform2i64ARB(int location, long x, long y);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform2i64ARB pglUniform2i64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform3i64ARB(int location, long x, long y, long z);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform3i64ARB pglUniform3i64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform4i64ARB(int location, long x, long y, long z, long w);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform4i64ARB pglUniform4i64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform1i64vARB(int location, int count, long* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform1i64vARB pglUniform1i64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform2i64vARB(int location, int count, long* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform2i64vARB pglUniform2i64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform3i64vARB(int location, int count, long* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform3i64vARB pglUniform3i64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform4i64vARB(int location, int count, long* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform4i64vARB pglUniform4i64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform1ui64ARB(int location, ulong x);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform1ui64ARB pglUniform1ui64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform2ui64ARB(int location, ulong x, ulong y);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform2ui64ARB pglUniform2ui64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform3ui64ARB(int location, ulong x, ulong y, ulong z);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform3ui64ARB pglUniform3ui64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform4ui64ARB(int location, ulong x, ulong y, ulong z, ulong w);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform4ui64ARB pglUniform4ui64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform1ui64vARB(int location, int count, ulong* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform1ui64vARB pglUniform1ui64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform2ui64vARB(int location, int count, ulong* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform2ui64vARB pglUniform2ui64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform3ui64vARB(int location, int count, ulong* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform3ui64vARB pglUniform3ui64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glUniform4ui64vARB(int location, int count, ulong* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glUniform4ui64vARB pglUniform4ui64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glGetUniformi64vARB(uint program, int location, long* @params);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glGetUniformi64vARB pglGetUniformi64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glGetUniformui64vARB(uint program, int location, ulong* @params);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glGetUniformui64vARB pglGetUniformui64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glGetnUniformi64vARB(uint program, int location, int bufSize, long* @params);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glGetnUniformi64vARB pglGetnUniformi64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glGetnUniformui64vARB(uint program, int location, int bufSize, ulong* @params);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glGetnUniformui64vARB pglGetnUniformui64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform1i64ARB(uint program, int location, long x);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform1i64ARB pglProgramUniform1i64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform2i64ARB(uint program, int location, long x, long y);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform2i64ARB pglProgramUniform2i64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform3i64ARB(uint program, int location, long x, long y, long z);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform3i64ARB pglProgramUniform3i64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform4i64ARB(uint program, int location, long x, long y, long z, long w);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform4i64ARB pglProgramUniform4i64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform1i64vARB(uint program, int location, int count, long* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform1i64vARB pglProgramUniform1i64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform2i64vARB(uint program, int location, int count, long* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform2i64vARB pglProgramUniform2i64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform3i64vARB(uint program, int location, int count, long* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform3i64vARB pglProgramUniform3i64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform4i64vARB(uint program, int location, int count, long* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform4i64vARB pglProgramUniform4i64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform1ui64ARB(uint program, int location, ulong x);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform1ui64ARB pglProgramUniform1ui64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform2ui64ARB(uint program, int location, ulong x, ulong y);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform2ui64ARB pglProgramUniform2ui64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform3ui64ARB(uint program, int location, ulong x, ulong y, ulong z);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform3ui64ARB pglProgramUniform3ui64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform4ui64ARB(uint program, int location, ulong x, ulong y, ulong z, ulong w);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform4ui64ARB pglProgramUniform4ui64ARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform1ui64vARB(uint program, int location, int count, ulong* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform1ui64vARB pglProgramUniform1ui64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform2ui64vARB(uint program, int location, int count, ulong* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform2ui64vARB pglProgramUniform2ui64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform3ui64vARB(uint program, int location, int count, ulong* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform3ui64vARB pglProgramUniform3ui64vARB;

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glProgramUniform4ui64vARB(uint program, int location, int count, ulong* value);

			[RequiredByFeature("GL_ARB_gpu_shader_int64", Api = "gl|glcore")]
			[ThreadStatic]
			internal static glProgramUniform4ui64vARB pglProgramUniform4ui64vARB;

		}
	}

}
