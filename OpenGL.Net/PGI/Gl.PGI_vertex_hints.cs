
// MIT License
// 
// Copyright (c) 2009-2017 Luca Piccioni
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 
// This file is automatically generated

#pragma warning disable 649, 1572, 1573

// ReSharper disable RedundantUsingDirective
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;

using Khronos;

// ReSharper disable CheckNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable JoinDeclarationAndInitializer

namespace OpenGL
{
	public partial class Gl
	{
		/// <summary>
		/// [GL] Value of GL_VERTEX_DATA_HINT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		public const int VERTEX_DATA_HINT_PGI = 0x1A22A;

		/// <summary>
		/// [GL] Value of GL_VERTEX_CONSISTENT_HINT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		public const int VERTEX_CONSISTENT_HINT_PGI = 0x1A22B;

		/// <summary>
		/// [GL] Value of GL_MATERIAL_SIDE_HINT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		public const int MATERIAL_SIDE_HINT_PGI = 0x1A22C;

		/// <summary>
		/// [GL] Value of GL_MAX_VERTEX_HINT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		public const int MAX_VERTEX_HINT_PGI = 0x1A22D;

		/// <summary>
		/// [GL] Value of GL_COLOR3_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint COLOR3_BIT_PGI = 0x00010000;

		/// <summary>
		/// [GL] Value of GL_COLOR4_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint COLOR4_BIT_PGI = 0x00020000;

		/// <summary>
		/// [GL] Value of GL_EDGEFLAG_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint EDGEFLAG_BIT_PGI = 0x00040000;

		/// <summary>
		/// [GL] Value of GL_INDEX_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint INDEX_BIT_PGI = 0x00080000;

		/// <summary>
		/// [GL] Value of GL_MAT_AMBIENT_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint MAT_AMBIENT_BIT_PGI = 0x00100000;

		/// <summary>
		/// [GL] Value of GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x00200000;

		/// <summary>
		/// [GL] Value of GL_MAT_DIFFUSE_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint MAT_DIFFUSE_BIT_PGI = 0x00400000;

		/// <summary>
		/// [GL] Value of GL_MAT_EMISSION_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint MAT_EMISSION_BIT_PGI = 0x00800000;

		/// <summary>
		/// [GL] Value of GL_MAT_COLOR_INDEXES_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint MAT_COLOR_INDEXES_BIT_PGI = 0x01000000;

		/// <summary>
		/// [GL] Value of GL_MAT_SHININESS_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint MAT_SHININESS_BIT_PGI = 0x02000000;

		/// <summary>
		/// [GL] Value of GL_MAT_SPECULAR_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint MAT_SPECULAR_BIT_PGI = 0x04000000;

		/// <summary>
		/// [GL] Value of GL_NORMAL_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint NORMAL_BIT_PGI = 0x08000000;

		/// <summary>
		/// [GL] Value of GL_TEXCOORD1_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint TEXCOORD1_BIT_PGI = 0x10000000;

		/// <summary>
		/// [GL] Value of GL_TEXCOORD2_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint TEXCOORD2_BIT_PGI = 0x20000000;

		/// <summary>
		/// [GL] Value of GL_TEXCOORD3_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint TEXCOORD3_BIT_PGI = 0x40000000;

		/// <summary>
		/// [GL] Value of GL_TEXCOORD4_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint TEXCOORD4_BIT_PGI = 0x80000000;

		/// <summary>
		/// [GL] Value of GL_VERTEX23_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint VERTEX23_BIT_PGI = 0x00000004;

		/// <summary>
		/// [GL] Value of GL_VERTEX4_BIT_PGI symbol.
		/// </summary>
		[RequiredByFeature("GL_PGI_vertex_hints")]
		[Log(BitmaskName = "GL")]
		public const uint VERTEX4_BIT_PGI = 0x00000008;

	}

}
