
// MIT License
// 
// Copyright (c) 2009-2017 Luca Piccioni
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// 
// This file is automatically generated

#pragma warning disable 649, 1572, 1573

// ReSharper disable RedundantUsingDirective
using System;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Security;
using System.Text;

using Khronos;

// ReSharper disable CheckNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable JoinDeclarationAndInitializer

namespace OpenGL
{
	public partial class Gl
	{
		/// <summary>
		/// [GL] Value of GL_LIST_PRIORITY_SGIX symbol.
		/// </summary>
		[RequiredByFeature("GL_SGIX_list_priority")]
		public const int LIST_PRIORITY_SGIX = 0x8182;

		/// <summary>
		/// [GL] glGetListParameterfvSGIX: Binding for glGetListParameterfvSGIX.
		/// </summary>
		/// <param name="list">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="pname">
		/// A <see cref="T:ListParameterName"/>.
		/// </param>
		/// <param name="params">
		/// A <see cref="T:float[]"/>.
		/// </param>
		[RequiredByFeature("GL_SGIX_list_priority")]
		public static void GetListParameterSGIX(uint list, ListParameterName pname, [Out] float[] @params)
		{
			unsafe {
				fixed (float* p_params = @params)
				{
					Debug.Assert(Delegates.pglGetListParameterfvSGIX != null, "pglGetListParameterfvSGIX not implemented");
					Delegates.pglGetListParameterfvSGIX(list, (int)pname, p_params);
					LogCommand("glGetListParameterfvSGIX", null, list, pname, @params					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glGetListParameterivSGIX: Binding for glGetListParameterivSGIX.
		/// </summary>
		/// <param name="list">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="pname">
		/// A <see cref="T:ListParameterName"/>.
		/// </param>
		/// <param name="params">
		/// A <see cref="T:int[]"/>.
		/// </param>
		[RequiredByFeature("GL_SGIX_list_priority")]
		public static void GetListParameterSGIX(uint list, ListParameterName pname, [Out] int[] @params)
		{
			unsafe {
				fixed (int* p_params = @params)
				{
					Debug.Assert(Delegates.pglGetListParameterivSGIX != null, "pglGetListParameterivSGIX not implemented");
					Delegates.pglGetListParameterivSGIX(list, (int)pname, p_params);
					LogCommand("glGetListParameterivSGIX", null, list, pname, @params					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glListParameterfSGIX: Binding for glListParameterfSGIX.
		/// </summary>
		/// <param name="list">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="pname">
		/// A <see cref="T:ListParameterName"/>.
		/// </param>
		/// <param name="param">
		/// A <see cref="T:float"/>.
		/// </param>
		[RequiredByFeature("GL_SGIX_list_priority")]
		public static void ListParameterSGIX(uint list, ListParameterName pname, float param)
		{
			Debug.Assert(Delegates.pglListParameterfSGIX != null, "pglListParameterfSGIX not implemented");
			Delegates.pglListParameterfSGIX(list, (int)pname, param);
			LogCommand("glListParameterfSGIX", null, list, pname, param			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glListParameterfvSGIX: Binding for glListParameterfvSGIX.
		/// </summary>
		/// <param name="list">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="pname">
		/// A <see cref="T:ListParameterName"/>.
		/// </param>
		/// <param name="params">
		/// A <see cref="T:float[]"/>.
		/// </param>
		[RequiredByFeature("GL_SGIX_list_priority")]
		public static void ListParameterSGIX(uint list, ListParameterName pname, float[] @params)
		{
			unsafe {
				fixed (float* p_params = @params)
				{
					Debug.Assert(Delegates.pglListParameterfvSGIX != null, "pglListParameterfvSGIX not implemented");
					Delegates.pglListParameterfvSGIX(list, (int)pname, p_params);
					LogCommand("glListParameterfvSGIX", null, list, pname, @params					);
				}
			}
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glListParameteriSGIX: Binding for glListParameteriSGIX.
		/// </summary>
		/// <param name="list">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="pname">
		/// A <see cref="T:ListParameterName"/>.
		/// </param>
		/// <param name="param">
		/// A <see cref="T:int"/>.
		/// </param>
		[RequiredByFeature("GL_SGIX_list_priority")]
		public static void ListParameterSGIX(uint list, ListParameterName pname, int param)
		{
			Debug.Assert(Delegates.pglListParameteriSGIX != null, "pglListParameteriSGIX not implemented");
			Delegates.pglListParameteriSGIX(list, (int)pname, param);
			LogCommand("glListParameteriSGIX", null, list, pname, param			);
			DebugCheckErrors(null);
		}

		/// <summary>
		/// [GL] glListParameterivSGIX: Binding for glListParameterivSGIX.
		/// </summary>
		/// <param name="list">
		/// A <see cref="T:uint"/>.
		/// </param>
		/// <param name="pname">
		/// A <see cref="T:ListParameterName"/>.
		/// </param>
		/// <param name="params">
		/// A <see cref="T:int[]"/>.
		/// </param>
		[RequiredByFeature("GL_SGIX_list_priority")]
		public static void ListParameterSGIX(uint list, ListParameterName pname, int[] @params)
		{
			unsafe {
				fixed (int* p_params = @params)
				{
					Debug.Assert(Delegates.pglListParameterivSGIX != null, "pglListParameterivSGIX not implemented");
					Delegates.pglListParameterivSGIX(list, (int)pname, p_params);
					LogCommand("glListParameterivSGIX", null, list, pname, @params					);
				}
			}
			DebugCheckErrors(null);
		}

		internal static unsafe partial class Delegates
		{
			[RequiredByFeature("GL_SGIX_list_priority")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glGetListParameterfvSGIX(uint list, int pname, float* @params);

			[RequiredByFeature("GL_SGIX_list_priority")]
			[ThreadStatic]
			internal static glGetListParameterfvSGIX pglGetListParameterfvSGIX;

			[RequiredByFeature("GL_SGIX_list_priority")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glGetListParameterivSGIX(uint list, int pname, int* @params);

			[RequiredByFeature("GL_SGIX_list_priority")]
			[ThreadStatic]
			internal static glGetListParameterivSGIX pglGetListParameterivSGIX;

			[RequiredByFeature("GL_SGIX_list_priority")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glListParameterfSGIX(uint list, int pname, float param);

			[RequiredByFeature("GL_SGIX_list_priority")]
			[ThreadStatic]
			internal static glListParameterfSGIX pglListParameterfSGIX;

			[RequiredByFeature("GL_SGIX_list_priority")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glListParameterfvSGIX(uint list, int pname, float* @params);

			[RequiredByFeature("GL_SGIX_list_priority")]
			[ThreadStatic]
			internal static glListParameterfvSGIX pglListParameterfvSGIX;

			[RequiredByFeature("GL_SGIX_list_priority")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glListParameteriSGIX(uint list, int pname, int param);

			[RequiredByFeature("GL_SGIX_list_priority")]
			[ThreadStatic]
			internal static glListParameteriSGIX pglListParameteriSGIX;

			[RequiredByFeature("GL_SGIX_list_priority")]
			[SuppressUnmanagedCodeSecurity]
			internal delegate void glListParameterivSGIX(uint list, int pname, int* @params);

			[RequiredByFeature("GL_SGIX_list_priority")]
			[ThreadStatic]
			internal static glListParameterivSGIX pglListParameterivSGIX;

		}
	}

}
